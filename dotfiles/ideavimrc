"""""""""""" Key Map
let mapleader = ","

imap jj <Esc>
nmap <CR> o<Esc>
"imap <C-o> <esc>o " mapped in idea to next/prev edit; as idea keymap it
"doesn't distinguish between insert and normal mode

nmap H ^
nmap L $
xmap H ^
xmap L $
omap H ^
omap L $

nnoremap U <C-r>
" nnoremap <space> viw
" vnoremap <space> e
nnoremap <bs> diw
inoremap ;; <esc>A;

nnoremap <leader>rr :%s///g
nnoremap <leader>rc :%s///gc

" For clojure
" set iskeyword=@,48-57,_,192-255,?,-,*,!,+,/,=,<,>,.,:,$
set iskeyword=@,48-57,_,192-255

""""""""""""    General
set updatetime=100
set autoread
set clipboard+=unnamedplus,ideaput
set nowrap        " don't wrap lines
set backspace=indent,eol,start " allow backspacing over everything in insert mode
set backspace=2 " make backspace work like most other apps
set number

"Setting related to tab
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'

set foldlevel=9

"Search related conf also look ~/.vim/vimrc/search-keybindings.vim
"set showmatch     " set show matching parenthesis
"set ignorecase    " ignore case when searching
"set smartcase     " ignore case if search pattern is all lowercase,
set nolazyredraw " don't redraw while executing macros
"set hlsearch      " highlight search terms
"set incsearch     " show search matches as you type

set wildignore=*.swp,*.bak,*.pyc,*.class
set title                " change the terminal's title
"set visualbell           " don't beep
set noerrorbells         " don't beep
set vb t_vb=
set belloff=all

set scrolloff=7 "when jumping makes at least 7 lines from top and bottom

nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <up>
inoremap <down> <down>
inoremap <left> <left>
inoremap <right> <right>

" Plugin emulators
Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/argtextobj.vim'
let g:argtextobj_pairs="(:),{:},<:>"
"set sneak " Useful but messes with s. Use s<xx> like f<x> but search for two chars
"Plug 'easymotion/vim-easymotion'
"set NERDTree
"set exchange
set 'vim-paragraph-motion'
set textobj-indent

" Keymaps
nmap U <Action>($Redo)

imap <C-S-i> <Action>(ParameterInfo)

" Goto and Search
nmap <leader>F <Action>(FindInPath)
nmap <leader>d <Action>(GotoDeclaration)

nmap <leader>f <Action>(GotoFile)
nmap <leader>c <Action>(GotoClass)
nmap <leader>s <Action>(GotoSymbol)
nmap <leader>a <Action>(GotoAction)

nmap <c-u> <Action>(GotoNextError)
nmap <c-s-u> <Action>(GotoPreviousError)

nmap <leader>ge <Action>(ShowErrorDescription)

" Refactoring
nmap <leader><leader>r <Action>(RenameElement)
nmap <leader><leader>f <Action>(ReformatCode)
nmap <leader><leader>o <Action>(OptimizeImports)
nmap <leader><leader>s <Action>(SurroundWith)
nmap <leader><leader>x <Action>(Unwrap)

nmap <C-h> <Action>(MoveElementLeft)
nmap <C-l> <Action>(MoveElementRight)

nmap <leader>ii <Action>(ImplementMethods)
nmap <leader>oo <Action>(OverrideMethods)

vmap <c-j> <Action>(MoveLineDown)
vmap <c-k> <Action>(MoveLineUp)
nmap <c-j> <Action>(MoveLineDown)
nmap <c-k> <Action>(MoveLineUp)

" mapped to exapand/shrink selection instead
" nmap <c-s-j> <Action> extend -> Couldn't find action
" nmap <c-s-k> <Action> shrink

" Git
" nmap <C-;> <Action> commit
" nmap <C-S-;> <Action> push
nmap ggb <Action>(Git.Branches)
nmap ggj <Action>(VcsShowNextChangeMarker)
nmap ggk <Action>(VcsShowPrevChangeMarker)
nmap ggm <Action>(Git.Merge)
nmap ggh <Action>(Vcs.ShowTabbedFileHistory)

" Window
nmap gwc <Action>(CloseContent)
nmap gwh <Action>(HideActiveWindow)
nmap <C-S-h> <C-w>h
nmap <C-S-l> <C-w>l
nmap <c-z> <Action>(ToggleDistractionFreeMode)

" Split
{nnoremap} <leader><bar> :vsplit<CR>

" Tool
nmap <leader>w <Action>(KJumpAction.Word0)
nmap <leader>l <Action>(KJumpAction.Line)

